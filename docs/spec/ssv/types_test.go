package ssv

import (
	"encoding/hex"
	spec "github.com/attestantio/go-eth2-client/spec/phase0"
	"github.com/bloxapp/ssv/beacon"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestValidatorID_MessageIDBelongs(t *testing.T) {
	t.Run("msg id belongs", func(t *testing.T) {
		msgID := []byte{1, 2, 3, 4, 1, 0, 0, 0}
		valID := ValidatorID{1, 2, 3, 4}
		require.True(t, valID.MessageIDBelongs(msgID))
	})

	t.Run("msg id doesn't belong", func(t *testing.T) {
		msgID := []byte{1, 2, 3, 4, 1, 0, 0, 0}
		valID := ValidatorID{1, 2, 3, 3}
		require.False(t, valID.MessageIDBelongs(msgID))
	})

	t.Run("msg id doesn't belong", func(t *testing.T) {
		msgID := []byte{1, 2, 3, 4, 1, 0, 0, 0}
		valID := ValidatorID{1, 2, 3, 4, 4}
		require.False(t, valID.MessageIDBelongs(msgID))
	})
}

func TestConsensusData_Marshaling(t *testing.T) {
	expected, _ := hex.DecodeString("7b226174745f64617461223ac2264757479223ad")

	t.Run("attestation data", func(t *testing.T) {
		c := testConsensusData
		byts, err := c.Encode()
		require.NoError(t, err)
		require.EqualValues(t, expected, byts)
	})

	t.Run("marshal with attestation data", func(t *testing.T) {
		c := &consensusData{}
		require.NoError(t, c.Decode(expected))
		require.EqualValues(t, beacon.RoleTypeAttester, c.Duty.Type)
		require.EqualValues(t, spec.BLSPubKey{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8}, c.Duty.PubKey)
		require.EqualValues(t, spec.Root{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2}, c.AttestationData.BeaconBlockRoot)
	})
}
